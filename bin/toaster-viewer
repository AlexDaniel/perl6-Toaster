#!/usr/bin/env perl6
use lib <lib>;
use TG;
use Toaster::DB;

TG.new
.get({
      my $data = Toaster::DB.new.all;
      $^stash<commits> = $dataÂ»<rakudo_long>.unique.sort.List;
      $stash<results>{.<module>}{ .<rakudo_long> } = .<status> for |$data;

      my $burnt = 0;
      my $unsucced = 0;
      for $stash<results>.values {
          my ($before, $after) = .{ $stash<commits><> }[0, *-1];
          $before ||= '';
          $after  ||= '';
          if $before eq 'Succ' and $after eq 'Fail' {
              $burnt++;
              .<burnt> = True;
          }
          if $before eq 'Succ' and $after ne 'Succ' {
              $unsucced++;
              .<unsucced> = True;
          }
      }
      $stash<burnt> = sprintf '%0.2f', 100 * $burnt / $stash<results>;
      $stash<burnt_num> = $burnt;

      $stash<unsucced> = sprintf '%0.2f', 100 * $unsucced / $stash<results>;
      $stash<unsucced_num> = $unsucced;
    }, '/' => '/index'
).start
